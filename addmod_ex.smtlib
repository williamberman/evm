(declare-const x (_ BitVec 256))
(declare-const y (_ BitVec 256))
(declare-const z (_ BitVec 256))

(declare-const r (_ BitVec 256))

;; Max 256 bit integer
;; (assert (= x #xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))
;; (assert (= y #xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))
(assert (= x #x0000000000000000000000000000000000000000000000000000000000000002))
(assert (= y #x0000000000000000000000000000000000000000000000000000000000000003))

;; (assert (= z #xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) 
;; (assert (= z #x0000000000000000000000000000000000000000000000000000000000000001)) 
(assert (= z #x0000000000000000000000000000000000000000000000000000000000000002)) 

(assert (= r
			((_ extract 255 0)
				(let ((xx ((_ zero_extend 256) x))
						 (yy ((_ zero_extend 256) y))
						 (zz ((_ zero_extend 256) z)))
					(ite (= zz #x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
						#x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
						(bvurem (bvadd xx yy) zz))))))


(check-sat)

(get-value (x y z r))

(exit)
